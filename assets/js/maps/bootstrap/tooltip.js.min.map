{"version":3,"sources":["bootstrap/tooltip.js"],"names":["$","Plugin","option","this","each","$this","data","options","test","Tooltip","element","enabled","timeout","hoverState","$element","inState","init","VERSION","TRANSITION_DURATION","animation","placement","selector","template","trigger","title","delay","html","container","viewport","padding","type","$viewport","click","focus","call","hover","document","constructor","Error","triggers","split","i","proxy","toggle","eventIn","eventOut","on","leave","_options","extend","prototype","getDefaults","DEFAULTS","hide","show","getDelegateOptions","defaults","key","value","self","enter","obj","currentTarget","hasClass","tip","clearTimeout","setTimeout","isInStateTrue","Event","e","inDom","contains","that","ownerDocument","documentElement","tipId","$tip","getUID","setContent","attr","autoPlace","autoToken","detach","css","left","display","addClass","pos","getPosition","replace","orgPlacement","viewportDim","appendTo","bottom","actualHeight","actualWidth","offsetWidth","calculatedOffset","offsetHeight","applyPlacement","complete","top","right","width","prevHoverState","support","removeClass","getCalculatedOffset","height","marginTop","marginLeft","parseInt","isNaN","offset","transition","one","emulateTransitionEnd","round","Math","delta","using","props","isVertical","arrowDelta","arrowOffsetPosition","replaceArrow","getTitle","getViewportAdjustedDelta","dimension","callback","isDefaultPrevented","removeAttr","fixTitle","el","elRect","scroll","$e","hasContent","viewportPadding","isBody","tagName","bottomEdgeOffset","topEdgeOffset","viewportDimensions","isSvg","window","SVGElement","elOffset","leftEdgeOffset","scrollTop","body","outerDims","rightEdgeOffset","prefix","o","disable","random","length","$arrow","find","destroy","off","toggleEnabled","fn","tooltip","Constructor","removeData","jQuery","old","noConflict"],"mappings":"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","file":"../../bootstrap/tooltip.js","sourcesContent":["/* ========================================================================\n * Bootstrap: tooltip.js v3.3.7\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       = null\n    this.options    = null\n    this.enabled    = null\n    this.timeout    = null\n    this.hoverState = null\n    this.$element   = null\n    this.inState    = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.7'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n    this.inState   = { click: false, hover: false, focus: false }\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n    }\n\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\n      self.hoverState = 'in'\n      return\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.isInStateTrue = function () {\n    for (var key in this.inState) {\n      if (this.inState[key]) return true\n    }\n\n    return false\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n    }\n\n    if (self.isInStateTrue()) return\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n      this.$element.trigger('inserted.bs.' + this.type)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var viewportDim = this.getPosition(this.$viewport)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  += marginTop\n    offset.left += marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow()\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isVertical ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = $(this.$tip)\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      if (that.$element) { // TODO: Check whether guarding this code with this `if` is really necessary.\n        that.$element\n          .removeAttr('aria-describedby')\n          .trigger('hidden.bs.' + that.type)\n      }\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && $tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var isSvg = window.SVGElement && el instanceof window.SVGElement\n    // Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.\n    // See https://github.com/twbs/bootstrap/issues/20280\n    var elOffset  = isBody ? { top: 0, left: 0 } : (isSvg ? null : $element.offset())\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    if (!this.$tip) {\n      this.$tip = $(this.options.template)\n      if (this.$tip.length != 1) {\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n      }\n    }\n    return this.$tip\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    if (e) {\n      self.inState.click = !self.inState.click\n      if (self.isInStateTrue()) self.enter(self)\n      else self.leave(self)\n    } else {\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n    }\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n      if (that.$tip) {\n        that.$tip.detach()\n      }\n      that.$tip = null\n      that.$arrow = null\n      that.$viewport = null\n      that.$element = null\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n"]}