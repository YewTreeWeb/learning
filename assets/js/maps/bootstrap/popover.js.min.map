{"version":3,"sources":["bootstrap/popover.js"],"names":["$","data","$this","this","each","option","options","test","popover","Plugin","Popover","Constructor","element","init","fn","tooltip","Error","VERSION","placement","extend","DEFAULTS","trigger","content","template","prototype","constructor","getDefaults","title","setContent","getContent","getTitle","$tip","html","find","children","detach","end","removeClass","hide","hasContent","$e","$element","o","$arrow","call","arrow","tip","old","noConflict","jQuery"],"mappings":"CAUE,SAAAA,GAAA,YA8EI,SAAKC,GAAMC,GACX,MAAIC,MAAAC,KAAOC,WAPb,GAAAH,GAAAF,EAAAG,MASDF,EAAAC,EAAAD,KAAA,cANOK,EAA2B,gBAAVD,IAAsBA,GAEtCJ,GAAQ,eAAeM,KAAKF,KAQhCG,GAAsBC,EAA3BR,KAAA,aAAAA,EAAA,GAAAS,GAAAP,KAAAG,IACA,gBAAaK,IAAbV,EAAAI,QAhFE,GAAAK,GAAU,SAAWE,EAASN,GADhCH,KAAAU,KAAA,UAAAD,EAAAN,GAIA,KAAKN,EAAEc,GAAGC,QAAS,KAAM,IAAIC,OAAM,8BAEnCN,GAAQO,QAAW,QAGjBC,EAAAA,SAAWlB,EADsDmB,UAAAnB,EAAAc,GAAAC,QAAAJ,YAAAS,UAEjEC,UAAS,QACTC,QAAS,QACTC,QAAAA,GAJFA,SAAA,0IAaAb,EAAQc,UAAUC,EAAAA,UAAcf,EAAAA,GAAAA,QAAhCC,YAAAa,WAEAd,EAAQc,UAAUE,YAAchB,EAE/BA,EAFDc,UAAAE,YAAA,WACE,MAAOhB,GAAQU,UAKfV,EAAIiB,UAAUC,WAAd,WACA,GAAIN,GAAUnB,KAAK0B,MADfF,EAAUxB,KAAK2B,WAGnBC,EAAU5B,KAAA0B,YAERE,GAAKzB,KAAAA,kBAAuBgB,KAAAA,QAAWU,KAAlB,OAAA,QAAsCL,GAD7DI,EAAKE,KAAK,oBAAoBC,WAAWC,SAASC,MAIlDL,KAAKM,QAAAA,KAAY,gBAAAf,GAAjB,OAAA,SAAA,QAFEA,GAKFS,EAAAM,YAAA,iCAIF3B,EAAQc,KAAR,kBAA+BQ,QAAYD,EAAAE,KAAA,kBAAAK,QAA3C5B,EAAQc,UAAUe,WAAa,WAI/B7B,MAAQc,MAAAA,YAARrB,KAA+B0B,cAA/BnB,EAAQc,UAAUK,WAAa,WAI7B,GAAAW,GAAOA,KAAAC,SAJTC,EAAAvC,KAAAG,OAUAI,OAAQc,GAAAA,KAAR,kBAC6BmB,kBAAdA,GAAAA,QADfD,EAAApB,QAAAsB,KAAAJ,EAAA,IAHUE,EAAEpB,UAGZZ,EAAQc,UAAUqB,MAAQ,WAQ1B,MAASpC,MAATkC,OAAwBxC,KAAAwC,QAAAxC,KAAA2C,MAAAb,KAAA,UAYxB,IAAIc,GAAM/C,EAAEc,GAAGN,OAUbR,GAAAA,GAAEc,QAAFL,EACAT,EAAAc,GAAAN,QAAAG,YAAAD,EAFFV,EAAEc,GAAGN,QAAQwC,WAAa,WAExB,MADAhD,GAAEc,GAAGN,QAAUuC,EACR5C,OAGT8C","file":"../../bootstrap/popover.js","sourcesContent":["/* ========================================================================\n * Bootstrap: popover.js v3.3.7\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.7'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n"]}